{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/SearchForm/index.js","components/SearchForm/SearchForm.js","components/ParcelList/ParcelListItem/ParcelListItem.js","components/ParcelList/ParcelList.js","services/api/index.js","App.js","services/db/index.js","index.js"],"names":["Header","className","Footer","SearchForm","state","query","handleChange","e","setState","target","value","validateInput","length","handleSubmit","preventDefault","props","addParcel","alert","onSubmit","this","type","name","placeholder","onChange","pattern","title","style","flexBasis","textAlign","Component","ParcelListItem","parcel","color","displayColorPicker","handleTitleChange","handleKeyDown","key","editParcel","number","handleColorChange","newColor","Object","values","hex","join","handleClick","handleClose","status","date","cityRecipient","citySender","backgroundColor","onKeyDown","onBlur","bind","onClick","removeParcel","ParcelList","parcels","getParcelStatus","setParcelColor","map","item","getData","axios","post","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","then","response","data","Number","CitySender","CityRecipient","payer","PayerType","Status","ActualDeliveryDate","Date","toLocaleString","formatData","App","filter","getDatafromAPI","newParcel","catch","error","console","log","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2f41bca.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"wrapper header\">\r\n                <h2 className=\"header__logo\">Sparta</h2>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"wrapper\">Â© Serhii Tyshchenko, 2019</div>\r\n        </footer>\r\n    );\r\n};\r\n","import SearchForm from './SearchForm';\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from 'react';\r\n\r\nclass SearchForm extends Component {\r\n    state = {\r\n        query: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ query: e.target.value });\r\n    };\r\n\r\n    validateInput = () => this.state.query.length > 14;\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.validateInput === true) {\r\n            this.props.addParcel(this.state.query);\r\n            this.setState({ query: '' });\r\n        } else {\r\n            alert('Empty query!');\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <form className=\"search__form\" onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        className=\"search__input\"\r\n                        value={this.state.query}\r\n                        type=\"text\"\r\n                        name=\"\"\r\n                        placeholder=\"Enter parcel number\"\r\n                        onChange={this.handleChange}\r\n                        pattern=\"^\\d{14}\"\r\n                        title=\"14 numbers\"\r\n                    />\r\n                    <button className=\"search__btn\">Track</button>\r\n                </form>\r\n                <div style={{ flexBasis: '100%', textAlign: 'center' }}>\r\n                    <small>try 20450182437180</small>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from 'react';\r\nimport { GithubPicker } from 'react-color';\r\nexport class ParcelListItem extends Component {\r\n    state = {\r\n        title: this.props.parcel.title || 'unknown',\r\n        color: this.props.parcel.color || '#fff',\r\n        displayColorPicker: false\r\n    };\r\n    handleTitleChange = e => {\r\n        this.setState({ title: e.target.value });\r\n    };\r\n    handleKeyDown = e => {\r\n        if (e.key === 'Enter') {\r\n            this.props.editParcel(\r\n                this.props.parcel.number,\r\n                'title',\r\n                e.target.value\r\n            );\r\n        }\r\n    };\r\n    handleColorChange = color => {\r\n        const newColor = Object.values(color.hex).join('');\r\n        const number = this.props.parcel.number;\r\n        this.setState({ color: newColor });\r\n        this.props.editParcel(number, 'color', newColor);\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false });\r\n    };\r\n    render() {\r\n        const {\r\n            number,\r\n            status,\r\n            date,\r\n            cityRecipient,\r\n            citySender\r\n        } = this.props.parcel;\r\n        const title = this.state.title;\r\n        const color = this.state.color;\r\n\r\n        return (\r\n            <li\r\n                className=\"parcels__item parcel\"\r\n                style={{ backgroundColor: color }}\r\n            >\r\n                <div className=\"parcel__header\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.title}\r\n                        className=\"parcel__title\"\r\n                        onChange={this.handleTitleChange}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onBlur={this.props.editParcel.bind(\r\n                            this,\r\n                            number,\r\n                            'title',\r\n                            title\r\n                        )}\r\n                    />\r\n                    <div className=\"parcel__controls\">\r\n                        <button\r\n                            className=\"parcel__btn\"\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            color\r\n                            {this.state.displayColorPicker ? (\r\n                                <GithubPicker\r\n                                    color={this.state.color}\r\n                                    onChange={this.handleColorChange}\r\n                                />\r\n                            ) : null}\r\n                        </button>\r\n\r\n                        <button\r\n                            onClick={this.props.removeParcel.bind(this, number)}\r\n                            title=\"Remove parcel\"\r\n                            className=\"parcel__btn parcel__remove\"\r\n                        >\r\n                            remove\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"parcel__details\">\r\n                    <h3 className=\"parcel__number\">{number}</h3>\r\n                    <div className=\"parcel__status\">\r\n                        {date}\r\n                        <br />\r\n                        {status}\r\n                        <br />\r\n                        {citySender} - {cityRecipient}\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { ParcelListItem } from './ParcelListItem';\r\n\r\nexport const ParcelList = props => {\r\n    const {\r\n        parcels,\r\n        getParcelStatus,\r\n        editParcel,\r\n        removeParcel,\r\n        setParcelColor\r\n    } = props;\r\n    return (\r\n        <div className=\"parcels\">\r\n            <ul className=\"parcels__list\">\r\n                {parcels.map(item => (\r\n                    <ParcelListItem\r\n                        parcel={item}\r\n                        key={item.number}\r\n                        getParcelStatus={getParcelStatus}\r\n                        editParcel={editParcel}\r\n                        removeParcel={removeParcel}\r\n                        setParcelColor={setParcelColor}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n","import axios from 'axios';\r\n// const Aftership = require('aftership')('c3f426dd-9ded-4095-9180-69e8301f4d27');\r\nconst formatData = response => {\r\n    const data = response.data.data[0];\r\n    return {\r\n        number: data.Number,\r\n        citySender: data.CitySender,\r\n        cityRecipient: data.CityRecipient,\r\n        payer: data.PayerType,\r\n        status: data.Status,\r\n        date: data.ActualDeliveryDate || new Date().toLocaleString()\r\n    };\r\n};\r\n\r\nconst getData = number => {\r\n    return axios\r\n        .post('https://api.novaposhta.ua/v2.0/json/', {\r\n            apiKey: '',\r\n            modelName: 'TrackingDocument',\r\n            calledMethod: 'getStatusDocuments',\r\n            methodProperties: {\r\n                Documents: [\r\n                    {\r\n                        DocumentNumber: number,\r\n                        Phone: ''\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n        .then(response => formatData(response));\r\n};\r\n\r\nexport default getData;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Header } from './components/Header';\r\nimport { Footer } from './components/Footer';\r\nimport SearchForm from './components/SearchForm';\r\nimport { ParcelList } from './components/ParcelList';\r\n\r\nimport * as db from '../src/services/db';\r\nimport getDatafromAPI from '../src/services/api';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        parcels: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState(db.getStateFromDB());\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        db.saveStateToDB(this.state);\r\n    }\r\n\r\n    addParcel = number => {\r\n        if (\r\n            this.state.parcels.filter(parcel => parcel.number === number)\r\n                .length > 0\r\n        ) {\r\n            alert('Parcel already added!');\r\n            return;\r\n        }\r\n        getDatafromAPI(number)\r\n            .then(response => {\r\n                const newParcel = response;\r\n                newParcel.title = 'untitled';\r\n                newParcel.color = 'white';\r\n                this.setState({\r\n                    parcels: [...this.state.parcels, newParcel]\r\n                });\r\n            })\r\n            .catch(error => console.log(error));\r\n    };\r\n\r\n    removeParcel = number => {\r\n        this.setState({\r\n            parcels: [\r\n                ...this.state.parcels.filter(item => item.number !== number)\r\n            ]\r\n        });\r\n    };\r\n\r\n    editParcel = (number, key, value) => {\r\n        this.setState({\r\n            parcels: this.state.parcels.map(parcel => {\r\n                if (parcel.number === number) {\r\n                    parcel[key] = value;\r\n                }\r\n                return parcel;\r\n            })\r\n        });\r\n    };\r\n\r\n    // getParcelStatus = number => {\r\n    //     this.getData(number)\r\n    //         .then(response => {\r\n    //             this.setState({\r\n    //                 responseText: this.formatResponse(response)\r\n    //             });\r\n    //         })\r\n    //         .catch(error => console.log(error));\r\n    // };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <main className=\"wrapper\">\r\n                    <SearchForm addParcel={this.addParcel} />\r\n                    <ParcelList\r\n                        getParcelStatus={this.getParcelStatus}\r\n                        removeParcel={this.removeParcel}\r\n                        editParcel={this.editParcel}\r\n                        parcels={this.state.parcels}\r\n                    />\r\n                </main>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const getStateFromDB = () => {\r\n    const intitalState = {\r\n        parcels: []\r\n    };\r\n    return localStorage.getItem('parcelList')\r\n        ? JSON.parse(localStorage.getItem('parcelList'))\r\n        : intitalState;\r\n};\r\n\r\nconst saveStateToDB = state => {\r\n    localStorage.setItem('parcelList', JSON.stringify(state));\r\n};\r\n\r\nexport { getStateFromDB, saveStateToDB };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}