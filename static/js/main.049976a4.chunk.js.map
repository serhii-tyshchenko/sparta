{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/SearchForm/index.js","components/SearchForm/SearchForm.js","components/ParcelList/ParcelListItem/ParcelListItem.js","components/ParcelList/ParcelList.js","services/api/index.js","App.js","services/db/index.js","index.js"],"names":["Header","className","Footer","SearchForm","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addParcel","alert","onSubmit","this","type","name","placeholder","onChange","pattern","title","style","flexBasis","textAlign","Component","ParcelListItem","parcel","color","displayColorPicker","handleTitleChange","handleKeyDown","key","editParcel","number","handleColorChange","newColor","Object","values","hex","join","handleClick","handleClose","status","date","cityRecipient","citySender","backgroundColor","onKeyDown","onBlur","bind","onClick","triangle","getParcelStatus","removeParcel","ParcelList","parcels","setParcelColor","map","item","getData","axios","post","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","then","response","data","Number","CitySender","CityRecipient","payer","PayerType","Status","ActualDeliveryDate","Date","toLocaleString","formatData","catch","error","console","log","App","numberExists","array","some","el","getDatafromAPI","newParcel","filter","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.049976a4.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = () => {\n    return (\n        <header>\n            <div className=\"wrapper header\">\n                <h2 className=\"header__logo\">Simple Parcel Tracking App</h2>\n            </div>\n        </header>\n    );\n};\n","import React from 'react';\n\nexport const Footer = () => {\n    return (\n        <footer>\n            <div className=\"wrapper\">Â© Serhii Tyshchenko, 2019</div>\n        </footer>\n    );\n};\n","import SearchForm from './SearchForm';\n\nexport default SearchForm;\n","import React, { Component } from 'react';\n\nclass SearchForm extends Component {\n    state = {\n        query: ''\n    };\n\n    handleChange = e => {\n        this.setState({ query: e.target.value });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.query !== '') {\n            this.props.addParcel(this.state.query);\n            this.setState({ query: '' });\n        } else {\n            alert('Empty query!');\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"search\">\n                <form className=\"search__form\" onSubmit={this.handleSubmit}>\n                    <input\n                        className=\"search__input\"\n                        value={this.state.query}\n                        type=\"text\"\n                        name=\"\"\n                        placeholder=\"Enter parcel number\"\n                        onChange={this.handleChange}\n                        pattern=\"^\\d{14}\"\n                        title=\"14 numbers\"\n                    />\n                    <button className=\"search__btn\">Track</button>\n                </form>\n                <div style={{ flexBasis: '100%', textAlign: 'center' }}>\n                    <small>try 20450182437180</small>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\nimport { GithubPicker } from 'react-color';\nexport class ParcelListItem extends Component {\n    state = {\n        title: this.props.parcel.title || 'unknown',\n        color: this.props.parcel.color || '#fff',\n        displayColorPicker: false\n    };\n    handleTitleChange = (e) => {\n        this.setState({ title: e.target.value });\n    };\n    handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            this.props.editParcel(\n                this.props.parcel.number,\n                'title',\n                e.target.value\n            );\n        }\n    };\n    handleColorChange = (color) => {\n        const newColor = Object.values(color.hex).join('');\n        const number = this.props.parcel.number;\n        this.setState({ color: newColor });\n        this.props.editParcel(number, 'color', newColor);\n    };\n    handleClick = () => {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    };\n\n    handleClose = () => {\n        this.setState({ displayColorPicker: false });\n    };\n    render() {\n        const {\n            number,\n            status,\n            date,\n            cityRecipient,\n            citySender\n        } = this.props.parcel;\n        const title = this.state.title;\n        const color = this.state.color;\n\n        return (\n            <li\n                className=\"parcels__item parcel\"\n                style={{ backgroundColor: color }}\n            >\n                <div className=\"parcel__header\">\n                    <input\n                        type=\"text\"\n                        value={this.state.title}\n                        className=\"parcel__title\"\n                        onChange={this.handleTitleChange}\n                        onKeyDown={this.handleKeyDown}\n                        onBlur={this.props.editParcel.bind(\n                            this,\n                            number,\n                            'title',\n                            title\n                        )}\n                    />\n                    <div className=\"parcel__controls\">\n                        <button\n                            className=\"parcel__btn icon-color-adjust\"\n                            onClick={this.handleClick}\n                            title=\"Change parcel color\"\n                        >\n                            {this.state.displayColorPicker ? (\n                                <GithubPicker\n                                    color={this.state.color}\n                                    onChange={this.handleColorChange}\n                                    triangle=\"top-right\"\n                                />\n                            ) : null}\n                        </button>\n                        <button\n                            onClick={this.props.getParcelStatus.bind(\n                                this,\n                                number\n                            )}\n                            title=\"Update parcel status\"\n                            className=\"parcel__btn parcel__update icon-arrows-cw\"\n                        ></button>\n                        <button\n                            onClick={this.props.removeParcel.bind(this, number)}\n                            title=\"Remove parcel\"\n                            className=\"parcel__btn parcel__remove icon-trash-empty\"\n                        ></button>\n                    </div>\n                </div>\n                <div className=\"parcel__details\">\n                    <h3 className=\"parcel__number\">{number}</h3>\n                    {citySender ? (\n                        <div className=\"parcel__route icon-location\">\n                            {citySender} - {cityRecipient}\n                        </div>\n                    ) : null}\n                    <div className=\"parcel__date icon-calendar\">{date}</div>\n                    <div className=\"parcel__status\">{status}</div>\n                </div>\n            </li>\n        );\n    }\n}\n","import React from 'react';\n\nimport { ParcelListItem } from './ParcelListItem';\n\nexport const ParcelList = props => {\n    const {\n        parcels,\n        getParcelStatus,\n        editParcel,\n        removeParcel,\n        setParcelColor\n    } = props;\n    return (\n        <div className=\"parcels\">\n            <ul className=\"parcels__list\">\n                {parcels.map(item => (\n                    <ParcelListItem\n                        parcel={item}\n                        key={item.number}\n                        getParcelStatus={getParcelStatus}\n                        editParcel={editParcel}\n                        removeParcel={removeParcel}\n                        setParcelColor={setParcelColor}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n","import axios from 'axios';\n// const Aftership = require('aftership')('c3f426dd-9ded-4095-9180-69e8301f4d27');\nconst formatData = response => {\n    const data = response.data.data[0];\n    return {\n        number: data.Number,\n        citySender: data.CitySender,\n        cityRecipient: data.CityRecipient,\n        payer: data.PayerType,\n        status: data.Status,\n        date: data.ActualDeliveryDate || new Date().toLocaleString()\n    };\n};\n\nconst getData = number => {\n    return axios\n        .post('https://api.novaposhta.ua/v2.0/json/', {\n            apiKey: '',\n            modelName: 'TrackingDocument',\n            calledMethod: 'getStatusDocuments',\n            methodProperties: {\n                Documents: [\n                    {\n                        DocumentNumber: number,\n                        Phone: ''\n                    }\n                ]\n            }\n        })\n        .then(response => formatData(response))\n        .catch(error => console.log(error));\n};\n\nexport default getData;\n","import React, { Component } from 'react';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport SearchForm from './components/SearchForm';\nimport { ParcelList } from './components/ParcelList';\n\nimport * as db from '../src/services/db';\nimport getDatafromAPI from '../src/services/api';\n\nimport './fontello/css/fontello.css';\n\nclass App extends Component {\n    state = {\n        parcels: []\n    };\n\n    componentDidMount() {\n        this.setState(db.getStateFromDB());\n    }\n\n    componentDidUpdate() {\n        db.saveStateToDB(this.state);\n    }\n\n    numberExists = (array, number) => array.some(el => el.number === number);\n\n    addParcel = number => {\n        if (this.numberExists(this.state.parcels, number)) {\n            alert('Parcel already added!');\n            return;\n        }\n        getDatafromAPI(number)\n            .then(response => {\n                const newParcel = response;\n                newParcel.title = 'untitled';\n                newParcel.color = 'white';\n                this.setState({\n                    parcels: [...this.state.parcels, newParcel]\n                });\n            })\n            .catch(error => console.log(error));\n    };\n\n    removeParcel = number => {\n        this.setState({\n            parcels: [\n                ...this.state.parcels.filter(item => item.number !== number)\n            ]\n        });\n    };\n\n    editParcel = (number, key, value) => {\n        this.setState({\n            parcels: this.state.parcels.map(parcel => {\n                if (parcel.number === number) {\n                    parcel[key] = value;\n                }\n                return parcel;\n            })\n        });\n    };\n\n    getParcelStatus = number => {\n        getDatafromAPI(number).then(response => {\n            this.setState({\n                parcels: this.state.parcels.map(parcel => {\n                    if (parcel.number === number) {\n                        parcel.status = response.status;\n                    }\n                    return parcel;\n                })\n            });\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <main className=\"wrapper\">\n                    <SearchForm addParcel={this.addParcel} />\n                    <ParcelList\n                        getParcelStatus={this.getParcelStatus}\n                        removeParcel={this.removeParcel}\n                        editParcel={this.editParcel}\n                        parcels={this.state.parcels}\n                    />\n                </main>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const getStateFromDB = () => {\n    const intitalState = {\n        parcels: []\n    };\n    return localStorage.getItem('parcelList')\n        ? JSON.parse(localStorage.getItem('parcelList'))\n        : intitalState;\n};\n\nconst saveStateToDB = state => {\n    localStorage.setItem('parcelList', JSON.stringify(state));\n};\n\nexport { getStateFromDB, saveStateToDB };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}